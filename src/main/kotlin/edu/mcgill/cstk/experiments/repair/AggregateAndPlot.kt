package edu.mcgill.cstk.experiments.repair


import ai.hypergraph.kaliningraph.types.*

/*
./gradlew aggregateAndPlot

Run the above command to aggregate timings,
then paste the output into repair_plot.py
 */

val samplerTimeout = 30_000
val criterion = { it: String -> it.split(", ")[1] == "2" }

fun main() {
  // Parsing the CSV data
  val posMatch = positiveSamples.lines().drop(1).filter(criterion)
  val negMatch = negativeSamples.lines().drop(1).filter(criterion)
  val parsedData = posMatch.map { it.split(", ").map(String::trim) }
    .map { (it[3].toInt() - samplerTimeout + it[2].toInt()).also { println("Time:$it") } to it[7].toInt() }

  println("" + posMatch.size + "/" + (posMatch.size + negMatch.size))
  val maxTime = parsedData.maxOf { it.first }
  val startInc = maxTime / 10
  val negativeSamples = negMatch.size

  // Defining the sample ranges
  val ranges = startInc.rangeTo(maxTime).step(startInc).toList()

  // Initializing counters for each P@N level and sample range
  val rankThresholds = listOf(1, 5, 10, Int.MAX_VALUE) // P@1, P@5, P@10, P@All
  val counters = rankThresholds.associateWith { mutableMapOf<Int, Int>() }

  // Counting occurrences
  (parsedData.toSet() * rankThresholds.toSet())
    .forEach { (ms, rank, threshold) ->
      if (rank < threshold)
        ranges.forEach { range ->
          counters[threshold]?.merge(range, if (ms < range) 1 else 0, Int::plus)
        }
    }

  // Calculating percentages and formatting the output
  counters.forEach { (threshold, counts) ->
    print("P@${if (threshold == Int.MAX_VALUE) "All" else threshold}= ")
    ranges.sorted().reversed().forEach { range ->
      val percentage = counts[range]?.toFloat()?.div(parsedData.size + negativeSamples)?.times(100) ?: 0f
      print("${range}s: %.3f, ".format(percentage / 100))
    }
    println() // Newline for each P@N level
  }
}

val positiveSamples = """
length, lev_dist, sample_ms, total_ms, total_samples, lev_ball_arcs, productions, rank, edit1, edit2, edit3
45, 1, 499, 87050, 66, 225, 512, 62, I::]::43
19, 3, 5, 55149, 5, 305, 83, 4, I::,::8, I::,::12, I::,::16
25, 2, 1393, 50104, 725, 251, 1674, 941, I::)::9, I::NEWLINE::11
16, 3, 6526, 53720, 985, 257, 2513, 11440, I::[::0, I::NAME::1, S:::::]::16
72, 1, 298, 315445, 14, 360, 207, 0, D::NAME::49
15, 2, 2484, 17874, 889, 151, 1773, 3308, I::(::1, I::)::14
22, 1, 363, 9354, 17, 110, 168, 0, D::)::17
47, 1, 25, 87993, 17, 235, 163, 0, D::...::44
10, 1, 0, 1079, 3, 50, 23, 0, D::import::1
35, 1, 44, 36092, 21, 175, 166, 0, D::NAME::27
32, 2, 4394, 106119, 358, 321, 2248, 2644, I::[::2, I::]::32
18, 3, 3815, 62917, 487, 289, 2079, 120, D:::::3, D::NAME::15, S::/::STRING::16
43, 1, 2, 67983, 3, 215, 96, 1, D::.::27
22, 1, 1, 8831, 3, 110, 62, 2, S::from::import::0
29, 2, 288, 69440, 60, 291, 122, 0, D::**::19, D::**::27
7, 2, 450, 3843, 376, 71, 1446, 2343, I::(::1, I::)::5
29, 1, 1, 21258, 1, 145, 58, 0, S::NAME::from::0
17, 2, 718, 16863, 281, 171, 297, 2, S::NUMBER::,::5, D::NUMBER::10
16, 3, 12039, 55006, 1607, 257, 2773, 14, D::/::2, D::NAME::5, S::/::STRING::6
26, 1, 21, 15880, 18, 130, 138, 0, D::[::15
23, 1, 18, 11306, 47, 115, 251, 48, I::)::21
25, 2, 978, 45605, 298, 251, 907, 0, D::>>::0, D::>::1
6, 1, 1, 301, 7, 30, 22, 0, I::NAME::5
5, 1, 1, 201, 16, 25, 49, 11, I::STRING::2
33, 1, 1, 32165, 1, 165, 68, 0, I::}::30
30, 2, 7, 74294, 15, 301, 161, 1, S::=:::::8, S::=:::::12
25, 3, 30044, 174590, 8180, 401, 5134, 73, D::NAME::0, S::NAME::(::20, S::;::)::22
18, 3, 10, 44382, 34, 289, 164, 33, I::,::7, I::,::11, I::,::15
43, 2, 7537, 240621, 1061, 431, 2252, 0, D::NAME::32, D::NAME::33
19, 1, 68, 8252, 19, 95, 103, 0, D:::::12
20, 2, 1160, 26887, 1078, 201, 1235, 2, D::/::3, D::>::4
34, 1, 11, 33488, 15, 170, 218, 16, I::(::0
6, 3, 2358, 11536, 3703, 97, 2675, 1, D::for::0, S::in::=::2, D:::::4
14, 2, 335, 10592, 467, 141, 481, 441, I::(::13, I::)::14
16, 2, 1345, 24706, 693, 161, 2953, 6, D::STRING::12, S::)::NAME::13
18, 1, 8, 5334, 32, 90, 161, 28, I::)::14
12, 1, 0, 1693, 3, 60, 27, 0, D::import::1
23, 1, 2, 10186, 9, 115, 56, 4, I::STRING::22
5, 3, 8645, 30300, 4423, 81, 5876, 0, D::NAME::0, D::NAME::1, D::NAME::2
25, 1, 2, 12488, 1, 125, 50, 0, S::NAME::import::2
45, 2, 2507, 259934, 216, 451, 2347, 271, I::)::20, I::NEWLINE::21
29, 1, 3, 20159, 6, 145, 79, 5, I::NAME::13
39, 1, 14, 49435, 26, 195, 141, 0, D::...::33
83, 1, 189, 501747, 57, 415, 539, 55, I::)::79
34, 2, 96, 107138, 1, 341, 68, 0, S::NAME::import::2, S::NAME::import::5
68, 1, 16, 263807, 14, 340, 307, 0, D::)::64
22, 3, 30043, 135396, 8476, 353, 5503, 0, D::NAME::0, D::NAME::1, D::NAME::2
23, 2, 2411, 43517, 548, 231, 1537, 1572, I::NAME::15, I::in::16
26, 3, 30018, 224324, 6378, 417, 9752, 0, D::NAME::22, D::NAME::23, D::NAME::24
5, 1, 1, 198, 11, 25, 34, 0, D:::::3
9, 3, 7654, 32712, 1719, 145, 4245, 65, S::(:::::4, D::)::6, D:::::7
13, 1, 3, 2084, 16, 65, 138, 10, I::[::0
6, 1, 0, 302, 9, 30, 22, 1, I::NAME::5
36, 1, 7, 42857, 13, 180, 148, 0, D::)::28
12, 2, 1426, 10522, 764, 121, 1720, 2187, I::(::1, I::)::3
44, 1, 12, 70891, 21, 220, 147, 0, S::=:::::39
23, 2, 3842, 46000, 997, 231, 2123, 0, D::...::20, D::NAME::21
35, 2, 1, 115032, 1, 351, 74, 0, I::,::12, I::,::17
13, 1, 2, 2003, 10, 65, 79, 7, S::NEWLINE:::::8
44, 1, 20, 69274, 25, 220, 209, 24, I::)::43
9, 2, 612, 7473, 576, 91, 1462, 0, D::NAME::4, D::NAME::5
12, 3, 17642, 63749, 2214, 193, 5625, 29627, I:::::2, I::(::3, S:::::)::12
8, 1, 1, 611, 4, 40, 31, 0, D:::::6
28, 3, 20943, 191259, 2232, 449, 2732, 10929, I::)::13, I::NEWLINE::15, I::NEWLINE::20
52, 2, 1, 378291, 1, 521, 104, 0, S::from::in::14, S::from::in::40
32, 3, 1153, 236311, 318, 513, 1035, 0, D::[::2, D::{::20, S::,::}::30
21, 3, 30023, 134385, 6504, 337, 5362, 30032, I::)::9, S::;::NEWLINE::10, S::;::)::20
13, 2, 842, 11549, 836, 131, 1536, 1910, I::(::8, I::)::12
9, 2, 228, 4220, 380, 91, 425, 0, D::if::0, D:::::7
15, 1, 3, 5137, 13, 75, 100, 0, D::)::12
20, 1, 21, 8663, 63, 100, 264, 64, I::)::12
24, 1, 0, 11972, 1, 120, 50, 0, I::,::13
25, 2, 3697, 57701, 840, 251, 2459, 0, D::NAME::10, D::NAME::11
12, 3, 21196, 111685, 2957, 193, 9597, 19240, I::NAME::0, I::(::1, D::NEWLINE::6
15, 2, 372, 13043, 310, 151, 534, 0, D::for::0, D:::::13
17, 1, 156, 4754, 51, 85, 175, 0, D::NAME::2
50, 1, 1, 101775, 1, 250, 102, 0, I::}::48
19, 2, 834, 23306, 548, 191, 1047, 0, D::>>::0, D::>::1
52, 1, 21, 111823, 27, 260, 172, 7, I::,::39
10, 1, 6, 1260, 36, 50, 128, 17, I::*::7
33, 1, 3, 29866, 5, 165, 146, 2, I::}::31
16, 1, 2, 3676, 10, 80, 100, 0, D::)::13
25, 2, 6737, 57714, 1490, 251, 2406, 8197, I::(::10, I::)::14
15, 3, 10494, 41166, 3599, 241, 345, 120, D::NAME::2, D::NAME::5, I::NEWLINE::11
9, 3, 26326, 85085, 4236, 145, 8617, 29328, I::{::0, D::NEWLINE::5, I::}::9
11, 2, 1398, 8844, 657, 111, 1691, 1886, I::(::4, I::)::10
36, 1, 12, 38126, 26, 180, 140, 1, D::STRING::11
35, 3, 30037, 362850, 3460, 561, 8920, 0, D::NAME::14, D::NAME::15, D::NAME::16
31, 1, 1, 26052, 3, 155, 112, 1, I::}::27
8, 1, 0, 581, 4, 40, 25, 1, S::def::NAME::2
35, 1, 7, 36923, 11, 175, 123, 9, S::NEWLINE:::::22
23, 2, 1071, 38720, 442, 231, 999, 0, D::>>::0, D::>::1
16, 1, 2, 3648, 9, 80, 42, 0, I::NAME::15
17, 1, 10, 4265, 33, 85, 134, 0, D::NAME::12
26, 3, 30034, 202111, 8906, 417, 8337, 0, D::NAME::15, D::NAME::16, D::NAME::17
26, 3, 30019, 163914, 1893, 417, 2904, 0, D::NAME::0, D::NAME::21, D::NAME::22
21, 2, 268, 29763, 198, 211, 337, 1, D::)::7, D::)::14
18, 2, 624, 19862, 517, 181, 973, 38, S::import::from::0, S::from::import::2
51, 2, 1806, 352375, 396, 511, 2410, 0, D::(::7, D::)::8
25, 2, 1819, 59554, 532, 251, 1957, 1740, I::)::20, I::NEWLINE::21
21, 3, 3820, 76976, 1154, 337, 493, 1, D::NAME::0, D::NEWLINE::3, D::{::19
18, 1, 6, 5037, 21, 90, 147, 0, D::)::15
16, 1, 4, 4233, 20, 80, 86, 0, S::.::,::12
86, 1, 38, 548527, 26, 430, 262, 25, I::NAME::78
23, 2, 5206, 49153, 1311, 231, 2086, 5448, I::(::21, I::)::23
15, 3, 30092, 132615, 5176, 241, 10013, 30156, I::{::0, D::NEWLINE::5, I::}::15
28, 1, 17, 17055, 41, 140, 162, 22, I::,::10
26, 1, 22, 14033, 51, 130, 274, 50, I::)::23
19, 3, 2525, 66162, 817, 305, 1701, 0, D::if::12, D::...::16, D::.::17
20, 2, 874, 26251, 591, 201, 1000, 0, D::>>::0, D::>::1
4, 1, 1, 122, 9, 20, 18, 0, I::NAME::3
46, 1, 3, 80142, 5, 230, 151, 0, D::}::23
18, 1, 194, 5386, 36, 90, 200, 31, I::(::2
36, 3, 17673, 328170, 2411, 577, 2486, 0, D::NAME::0, D::STRING::1, D::<::5
79, 1, 27, 416420, 14, 395, 277, 0, D::)::54
16, 1, 0, 3678, 1, 80, 32, 0, S::]::}::14
25, 2, 1450, 47572, 369, 251, 1016, 0, D::>>::0, D::>::1
23, 1, 25, 10729, 57, 115, 195, 32, I::.::16
40, 2, 11444, 194561, 902, 401, 2846, 5448, I::(::24, I::)::39
24, 2, 72, 41485, 139, 241, 128, 0, D:::::19, D:::::22
19, 1, 4, 6185, 15, 95, 142, 1, D::]::10
36, 1, 21, 37823, 43, 180, 242, 42, I::)::34
21, 3, 14625, 84422, 3196, 337, 368, 0, D::NAME::0, D::NAME::7, D::NAME::14
25, 1, 3, 12647, 11, 125, 71, 0, D:::::23
12, 3, 9038, 40987, 3283, 193, 3983, 3471, I::NAME::0, S::if::(::1, S:::::)::11
30, 3, 13391, 190348, 2753, 481, 1031, 1, D:://::0, D::NAME::1, D::NAME::6
21, 2, 3263, 34854, 780, 211, 2019, 4263, I::(::17, I::)::21
49, 1, 127, 102822, 36, 245, 204, 14, I::,::47
33, 2, 9307, 112801, 1507, 331, 2978, 7308, I::(::12, I::)::28
16, 2, 28, 14478, 115, 161, 104, 24, I::NAME::3, S::=::==::13
19, 2, 1365, 24834, 873, 191, 1438, 1490, I::[::7, I::]::8
47, 2, 854, 278180, 320, 471, 1943, 0, S::[::(::12, D::]::44
6, 3, 6530, 26133, 1923, 97, 4793, 11026, S::=::(::1, I::=::3, S::NEWLINE::NAME::4
24, 2, 3643, 51119, 945, 241, 1947, 3011, I::(::22, I::)::24
4, 2, 108, 1467, 546, 41, 1118, 967, I::(::2, I::)::4
13, 2, 300, 10211, 434, 131, 738, 5, D::NEWLINE::10, S::STRING::NAME::11
8, 3, 14610, 26736, 6105, 129, 2523, 9434, D::NAME::0, I::(::6, I::)::8
28, 2, 4434, 74158, 874, 281, 2711, 3023, I::(::20, I::)::28
21, 3, 30009, 375580, 1270, 337, 18538, 8935, I::(::0, I::}::16, S::}::)::21
8, 3, 9048, 20787, 5051, 129, 2484, 12639, S::NUMBER::NAME::1, I::NAME::3, S::NUMBER::.::4
25, 3, 30051, 195500, 7501, 401, 8871, 0, D::NAME::9, D::NAME::10, D::NAME::11
37, 2, 651, 138088, 301, 371, 210, 2, D::NEWLINE::12, S::NAME::return::34
38, 2, 2, 144015, 1, 381, 80, 0, I::,::6, I::,::26
56, 2, 24, 482088, 25, 561, 203, 2, I::}::31, I::NEWLINE::33
15, 3, 30024, 93205, 2507, 241, 7507, 0, D::NAME::9, D::NAME::10, D::NAME::11
33, 3, 8737, 298686, 832, 529, 5353, 48, I:::::23, D::...::30, D::.::31
24, 2, 858, 48388, 417, 241, 909, 0, D::>>::0, D::>::1
20, 2, 938, 25965, 748, 201, 1000, 0, D::>>::0, D::>::1
16, 1, 0, 3490, 1, 80, 34, 0, I::{::6
17, 3, 14473, 59996, 2908, 273, 2531, 1, D::==::11, D::NAME::13, D::NAME::14
19, 2, 1371, 26668, 624, 191, 1275, 57, S::(::[::11, S::)::]::15
49, 2, 17504, 330753, 1899, 491, 3402, 8511, I::(::29, I::)::31
20, 3, 3913, 74171, 1239, 321, 2059, 1, D::.::14, D::.::15, D::NAME::17
22, 2, 121, 37057, 125, 221, 100, 1, D::/::18, D::>::20
10, 3, 1075, 12031, 2207, 161, 528, 0, S::STRING::,::2, S::STRING::,::4, S::STRING::,::6
24, 2, 2560, 46031, 683, 241, 1487, 0, D::}::7, D::{::9
13, 1, 13, 2455, 55, 65, 179, 2, S::NAME::return::0
30, 3, 30023, 566319, 6402, 481, 21079, 9811, I::]::24, I::NEWLINE::25, D::]::30
21, 3, 9784, 85538, 1428, 337, 2446, 16999, I:::::19, I::(::20, S::==::)::21
35, 1, 32, 36628, 69, 175, 323, 65, I::)::22
14, 2, 1523, 12352, 950, 141, 1188, 799, I::STRING::3, S::NAME::,::4
45, 1, 22, 76896, 30, 225, 383, 0, D::)::42
68, 1, 19, 256232, 20, 340, 196, 0, D::...::18
35, 1, 22, 37698, 28, 175, 190, 26, I::]::28
3, 2, 76, 1469, 303, 31, 921, 496, I::(::1, I::)::3
18, 1, 7, 6940, 22, 90, 167, 14, I::]::17
70, 1, 258, 300061, 29, 350, 272, 27, I::)::69
18, 1, 49, 5908, 40, 90, 308, 40, I::)::16
33, 3, 30048, 364836, 11739, 529, 10075, 0, D::NAME::29, D::NAME::30, D::NAME::31
20, 3, 2658, 76400, 1041, 321, 202, 0, S:::::,::3, S:::::,::9, S:::::,::15
45, 2, 14745, 256129, 1147, 451, 2641, 5815, I::(::43, I::)::45
37, 3, 30004, 383872, 1186, 593, 3698, 54, D::(::18, I::NEWLINE::26, D::(::29
46, 1, 1, 92319, 1, 230, 90, 0, D:::::12
24, 2, 3092, 49699, 1007, 241, 1615, 1924, I::(::1, I::)::22
35, 2, 33, 110400, 59, 351, 244, 0, D::{::20, D::}::33
24, 1, 5, 11163, 11, 120, 67, 0, D::&::14
7, 1, 0, 737, 9, 35, 24, 0, I::pass::6
56, 2, 3134, 464322, 764, 561, 1883, 0, D::>>::0, D::>::1
30, 3, 30005, 241943, 2173, 481, 3860, 15288, I::]::10, I::NEWLINE::11, I::NEWLINE::24
46, 1, 16, 96363, 19, 230, 142, 0, S::.::,::16
35, 1, 139, 33478, 56, 175, 458, 52, I::)::31
20, 1, 15, 7426, 32, 100, 137, 9, I::=::1
12, 3, 30037, 75924, 4884, 193, 7417, 0, D::NAME::8, D::NAME::9, D::STRING::10
34, 2, 3, 113220, 1, 341, 72, 0, I::,::10, I::,::22
34, 2, 11984, 128920, 1122, 341, 2989, 6347, I::(::5, I::)::30
14, 1, 1, 2486, 9, 70, 47, 0, D::@::11
28, 3, 10899, 167156, 1444, 449, 374, 26, S:::::,::1, S:::::,::11, S:::::,::19
23, 1, 2, 10250, 5, 115, 63, 0, D::.::21
23, 2, 146, 42475, 183, 231, 269, 0, D::(::11, D::)::15
24, 2, 229, 38442, 126, 241, 104, 0, D::<::19, D::>::22
25, 1, 8, 14397, 17, 125, 76, 0, D::*::23
39, 1, 234, 48168, 20, 195, 309, 0, D::)::35
50, 2, 8814, 339657, 658, 501, 2848, 21, D::}::43, I::}::48
76, 1, 6, 352859, 3, 380, 162, 1, I::}::75
33, 2, 60, 97829, 116, 331, 111, 0, D:::::1, D:::::18
73, 1, 11, 326643, 11, 365, 160, 2, S::from::NAME::0
14, 2, 731, 10856, 337, 141, 742, 349, I::{::4, I::}::12
20, 2, 1228, 26439, 345, 201, 888, 91, S::[::{::2, S::]::}::18
26, 1, 22, 16978, 35, 130, 167, 0, D::NAME::11
75, 1, 26, 353668, 13, 375, 173, 0, D::,::38
33, 1, 24, 31090, 25, 165, 266, 1, D::)::30
43, 2, 13604, 239890, 1182, 431, 3176, 7133, I::(::36, I::)::42
20, 2, 444, 27192, 273, 201, 907, 285, I::]::12, I::NEWLINE::14
25, 3, 53, 111037, 118, 401, 117, 0, D::.::4, D::.::11, D::.::23
24, 1, 4, 11290, 14, 120, 128, 10, I::]::22
15, 1, 0, 2972, 1, 75, 32, 0, I::}::13
28, 3, 1, 165932, 1, 449, 62, 0, I::,::6, I::,::13, I::,::17
28, 2, 0, 59906, 1, 281, 60, 0, I::,::7, I::,::21
66, 1, 24, 243495, 25, 330, 195, 6, I::,::14
15, 3, 5208, 36163, 2111, 241, 311, 10999, I::,::3, I::,::8, I::,::13
40, 2, 1647, 172503, 499, 401, 1868, 50, S::import::from::0, S::from::import::2
23, 2, 707, 40503, 275, 231, 1358, 461, I::]::21, I::NEWLINE::22
22, 1, 400, 8886, 54, 110, 242, 50, I::]::19
35, 3, 30014, 334706, 1999, 561, 3625, 0, D::NEWLINE::10, D::==::11, D::>::12
9, 3, 200, 8870, 432, 145, 742, 1107, S::>>::NAME::0, I::NAME::2, I::NEWLINE::3
13, 1, 1, 2956, 7, 65, 80, 6, I::}::12
9, 1, 1, 777, 12, 45, 35, 2, S::import::NAME::0
45, 1, 209, 74449, 20, 225, 148, 1, S::,:::::12
16, 2, 1778, 19463, 967, 161, 2319, 2486, I::(::6, I::)::15
10, 3, 12237, 34906, 6054, 161, 4105, 810, S::%::NAME::0, S::NAME::(::1, S::NAME::)::2
36, 1, 1, 41533, 1, 180, 74, 0, I::in::33
31, 2, 1783, 85215, 548, 311, 1173, 710, I::[::30, I::]::31
25, 3, 30053, 266423, 4704, 401, 12287, 28035, I::{::0, D::NEWLINE::5, I::}::24
15, 3, 30017, 105708, 4303, 241, 6557, 150, D::+::10, D::NUMBER::11, I::pass::14
32, 2, 1694, 107054, 947, 321, 1355, 0, D::>>::0, D::>::1
14, 2, 1092, 10927, 447, 141, 801, 0, D::>>::0, D::>::1
9, 3, 19334, 43702, 11063, 145, 5347, 0, D::NUMBER::1, D::NUMBER::3, D::NAME::4
30, 2, 321, 82531, 270, 301, 173, 0, D::**::0, D::**::2
24, 1, 2, 11588, 7, 120, 54, 0, S::as::NAME::11
20, 2, 525, 24266, 367, 201, 219, 0, D::NUMBER::4, D::NUMBER::11
22, 1, 6, 10128, 21, 110, 107, 15, I::<::9
21, 2, 725, 28633, 682, 211, 1037, 976, I::[::0, S::>>::]::1
43, 2, 7191, 215149, 965, 431, 1818, 3821, I::(::41, I::)::42
21, 3, 19272, 104336, 2071, 337, 3935, 6619, S::STRING::)::6, I::NEWLINE::8, I::NEWLINE::15
8, 1, 0, 584, 3, 40, 26, 1, I::}::7
9, 1, 0, 760, 5, 45, 39, 0, D::.::7
""".trimIndent()

val negativeSamples = """
  length, lev_dist, sample_ms, total_ms, total_samples, lev_ball_arcs, productions, rank, edit1, edit2, edit3
  270, 2, 0, 2701, 0, I::{::0, D::NEWLINE::268
  66, 3, 0, 1057, 0, D::NEWLINE::56, I::(::65, I::)::66
  8, 3, 0, 129, 247, D::NAME::3, D::is::5, D:::::6
  39, 3, 0, 625, 0, D::NAME::32, D::NAME::33, D::NAME::34
  18, 1, 13, 90, 148, I::(::14
  22, 1, 0, 110, 58, D::NAME::0
  12, 2, 0, 121, 0, D::NAME::2, D::NAME::3
  34, 2, 455, 341, 2281, D::NUMBER::21, D:::::22
  69, 3, 0, 1105, 0, I::{::0, D::NEWLINE::5, I::}::69
  46, 2, 369, 461, 2416, I::)::28, I::NEWLINE::39
  26, 3, 2463, 417, 3956, I::,::20, S::NAME:::::22, S::STRING::NAME::23
  115, 3, 0, 1841, 0, D::*::5, D::*::13, D::NEWLINE::24
  134, 3, 0, 2145, 0, D::NAME::51, D::NAME::52, D::NAME::53
  70, 2, 0, 701, 0, S::{::[::19, I::]::39
  85, 3, 0, 1361, 0, D::{::21, I::NEWLINE::58, I::NEWLINE::70
  88, 2, 0, 881, 0, D::>>::0, D::>::1
  56, 3, 0, 897, 0, D::NAME::19, I::(::46, S::NAME::)::49
  40, 3, 0, 641, 0, I::NAME::27, I::[::28, I::]::38
  36, 2, 1022, 361, 2559, D::NAME::30, D::(::31
  80, 3, 0, 1281, 0, D::NEWLINE::64, D::>>::65, D::)::77
  83, 2, 0, 831, 0, I::(::71, I::)::75
  57, 3, 0, 913, 0, I::{::0, D::NEWLINE::36, I::}::52
  97, 3, 0, 1553, 0, I::)::48, I::NEWLINE::49, I::NEWLINE::73
  20, 1, 0, 100, 48, D::NAME::0
  55, 3, 0, 881, 0, I::{::0, D::NEWLINE::9, I::}::55
  90, 1, 0, 450, 0, D::NAME::87
  105, 3, 0, 1681, 0, I::(::89, I::)::95, S::,::+::97
  41, 3, 0, 657, 0, D::NAME::34, D::NAME::37, D::.::39
  44, 3, 0, 705, 0, S:::::,::3, S:::::,::17, S:::::,::31
  54, 3, 0, 865, 0, I::)::34, I::NEWLINE::36, I::)::54
  36, 3, 24686, 577, 23487, D::STRING::22, D::NEWLINE::23, D::NAME::24
  6, 1, 0, 30, 0, D::NAME::2
  55, 3, 0, 881, 0, S::[::(::6, S::]::,::8, S::NAME::)::10
  50, 3, 0, 801, 0, I::}::47, I::]::48, I::NEWLINE::51
  35, 3, 495, 561, 1385, D::as::28, D::.::29, S::is::NAME::30
  132, 3, 0, 2113, 0, I::(::2, I::(::39, I::(::87
  59, 3, 0, 945, 0, D::...::44, D::.::45, D:::::46
  75, 3, 0, 1201, 0, S::(::,::21, I::NEWLINE::64, I::NEWLINE::70
  32, 3, 2058, 513, 28452, I::NAME::3, I::for::4, S::if::in::6
  91, 3, 0, 1457, 0, D::>>::56, D::>::57, D::NAME::58
  80, 2, 0, 801, 0, D::%::0, D::%::1
  20, 3, 4964, 321, 16783, I::(::12, I::)::13, S::NAME::in::14
  218, 1, 0, 1090, 0, D::NAME::215
  212, 2, 0, 2121, 0, S::NAME::from::0, D::NEWLINE::65
  199, 3, 0, 3185, 0, D::*::24, D::*::93, D::*::162
  31, 3, 3404, 497, 20692, D::=::13, D::NUMBER::14, S::=::==::15
  42, 3, 0, 673, 0, D::NAME::19, D::NAME::38, D::NAME::39
  35, 3, 864, 561, 4108, D::...::18, S::.::,::19, I::]::24
  34, 3, 1843, 545, 15695, I::[::33, I::]::34, I::]::35
  70, 3, 0, 1121, 0, D::...::3, D::...::4, D::...::5
  58, 3, 0, 929, 0, D::,::9, I::]::57, I::NEWLINE::58
  188, 1, 0, 940, 0, D::)::138
  126, 2, 0, 1261, 0, I::)::92, I::NEWLINE::94
  43, 3, 0, 689, 0, D::NAME::30, D::NAME::31, D::for::32
  39, 2, 671, 391, 2137, I::NAME::25, I::in::26
  175, 2, 0, 1751, 0, I::[::173, I::]::174
  128, 2, 0, 1281, 0, I::}::62, I::,::64
  51, 3, 0, 817, 0, S::NAME::import::0, S::NAME::with::3, D::NEWLINE::17
  107, 2, 0, 1071, 0, D::%::20, D::NAME::21
  38, 3, 0, 609, 0, D::NAME::15, D::[::16, I::NEWLINE::26
  30, 2, 0, 301, 222, I::(::20, I::)::29
  77, 1, 0, 385, 0, D:::::30
  127, 2, 0, 1271, 0, I::(::121, I::)::126
  93, 3, 0, 1489, 0, D::NEWLINE::60, D::NAME::61, D::=::62
  49, 3, 0, 785, 0, D::NAME::44, D::NEWLINE::45, D::NAME::46
  44, 2, 1416, 441, 4176, I::(::14, I::)::16
  30, 3, 1435, 481, 2156, I::(::7, I::)::8, I::NAME::15
  121, 3, 0, 1937, 0, D::>>::0, D::>::1, D::(::10
  46, 3, 0, 737, 0, S::STRING::,::28, S::STRING::,::34, S::STRING::,::41
  46, 3, 0, 737, 0, I::]::26, I::NEWLINE::27, I::NEWLINE::40
  93, 2, 0, 931, 0, I::(::62, I::)::93
  8, 2, 0, 81, 319, S::for::return::0, D:::::6
  22, 2, 0, 221, 95, S::NEWLINE:::::4, S::NEWLINE:::::15
  60, 2, 0, 601, 0, I::)::58, I::NEWLINE::60
  37, 3, 6340, 593, 19305, D::)::12, D::NEWLINE::14, D::(::15
  19, 2, 1073, 191, 1491, I::STRING::15, I:::::16
  60, 2, 0, 601, 0, D::NAME::0, D::NAME::3
  87, 3, 0, 1393, 0, D::NAME::40, D::NAME::41, D::NAME::42
  52, 1, 0, 260, 0, D:::::18
  41, 3, 0, 657, 0, I::,::7, I::,::26, I::,::33
  23, 3, 1663, 369, 5140, I::(::18, S::NUMBER::,::20, S::NAME::)::21
  45, 3, 0, 721, 0, I::{::0, D::NEWLINE::13, I::}::45
  82, 2, 0, 821, 0, I::)::70, I::NEWLINE::71
  30, 3, 0, 481, 14112, D::(::0, S::if::=::2, D::)::6
  107, 3, 0, 1713, 0, D::[::2, I::NEWLINE::76, I::(::81
  37, 1, 0, 185, 0, S::=:::::25
  100, 2, 0, 1001, 0, I::}::97, I::]::98
  48, 3, 0, 769, 0, S::)::}::14, S::)::}::30, S::)::}::46
  177, 3, 0, 2833, 0, I::)::53, I::NEWLINE::145, I::NEWLINE::170
""".trimIndent()